// Iterative C++ program to reverse a linked list

#include <iostream>
using namespace std;
 

struct Node {
    int data;
    struct Node* next;
    Node(int data)
    {
        this->data = data;
        next = NULL;
    }
};
 
struct LinkedList {
    Node* head;
    LinkedList() { head = NULL; }
 
    // Function to reverse the linked list
    void reverse()
    {

        Node *current = head;
        Node *prev = NULL, *next = NULL;
 
        while (current != NULL) {
            // Store next
            next = current->next;
 
            current->next = prev;
 
             prev = current;
            current = next;
        }
        head = prev;
    }
 
    // Prints the linked list
    void print()
    {
        struct Node* temp = head;
        while (temp != NULL) {
            cout << temp->data << " ";
            temp = temp->next;
        }
    }
 
    void push(int data)
    {
        Node* temp = new Node(data);
        temp->next = head;
        head = temp;
    }
};
 
int main()
{
    LinkedList x;
    x.push(20);
    x.push(4);
    x.push(15);
    x.push(85);
 
    cout << "Given linked list"<<endl;
    x.print();
 
    x.reverse();
 
    cout << "\n Reversed Linked list"<<endl;
    x.print();
    return 0;
}
